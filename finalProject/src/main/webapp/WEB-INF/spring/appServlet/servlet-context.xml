<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- 스프링의 핵심 부품인 DispatcherServlet에 등록되어야하는 설정을 기록 -->
	
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven /> 
	<!--
		* annotation-driven 
	 	 component-scan 에 등록되어있는 base-package 하위 경로들에 있는 어노테이션을 활성화해주는 설정
		ex) @Controller , @Bean, @Service ,....
	 -->
	
		<beans:bean id="basicServer"
		class="com.kh.springProject.websocket.chatWebSocketHandler" />

	<!-- 접속을 받아줄 대상을 지정하는 작업 -->
	<websocket:handlers
		allowed-origins="http://localhost:8888/springProject,http://192.168.50.44:8888/springProject"> <!-- handler : 서버 정보 / path : 해당 서버에 접속 매핑주소 -->
		<!-- http: X / ws://localhost:8888/springProject/basic -->

		<websocket:mapping handler="basicServer"
			path="/chat" />

		<!-- Http 통신으로 요청되어진 HttpSession 정보를 가지고 오기 위한 설정 -->
		<websocket:handshake-interceptors>
			<beans:bean
				class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>


	</websocket:handlers>
	
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 
		주소 자동완성 도구 등록 
		기존 forward 작업을 수행하려면 보여주고자 하는 뷰 페이지 경로를 입력했어야했다.
		해당 경로를 기본으로 설정하여 생략할 수 있도록 해주는 설정
		앞쪽엔 /WEB-INF/views/ 를 붙여주고 뒤쪽엔 .jsp를 붙여준다.
		
		spring에서 제공해주는 ViewResolver 객체이며
		prefix : 접두사 / suffix : 접미사 로 등록되어있다. 
	 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<!-- 
		base-package 에서 설정된 패키지와 그 이하 패키지를 감시하여 등록 가능한 도구 (Component) 를 모두 찾아
		등록시켜주는 설정
	 -->
	
	<context:component-scan base-package="com.kh.springProject" />

	
	<beans:bean id="naverLoginBO" class="com.kh.springProject.tst.NaverLoginBO" />

	
	
	
</beans:beans>
